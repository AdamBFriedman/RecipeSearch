{"version":3,"sources":["tempList.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","tempDetails.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","_this$props$recipe","this","props","recipe","handleDetails","react_default","a","createElement","Fragment","className","src","style","height","alt","type","onClick","href","target","rel","Component","RecipeSearch","_this$props","value","handleSubmit","handleChange","onSubmit","htmlFor","name","placeholder","onChange","RecipeList","error","RecipeSearch_RecipeSearch","map","Recipe_Recipe","key","f2f_url","ingredients","publisher_url","RecipeDetails","state","id","url","fetch","mode","data","json","jsonData","setState","console","log","_context","t0","_this$state$recipe","handleIndex","item","index","App","base_url","details_id","pageIndex","search","query","displayPage","RecipeList_RecipeList","_this","RecipeDetails_RecipeDetails","e","preventDefault","_this$state","concat","getRecipes","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2beddf93.chunk.js","sourcesContent":["export const recipes = [\n  {\n    recipe_id: 35382,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35383,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35384,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  }\n];\n","import React, { Component } from \"react\";\n\nexport default class Recipe extends Component {\n  render() {\n    const {\n      image_url,\n      title,\n      source_url,\n      publisher,\n      recipe_id\n    } = this.props.recipe;\n    const { handleDetails } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"col-10 mx-auto col-md-4 col-lg-4 my-3\">\n          <div className=\"card\">\n            <img\n              src={image_url}\n              className=\"img-card-top\"\n              style={{ height: \"14rem\" }}\n              alt=\"recipe\"\n            />\n            <div className=\"card-body text-capitalize\">\n              <h6>{title}</h6>\n              <h6 className=\"red\">\n                Provided by: <span className=\"secondaryColor\">{publisher}</span>\n              </h6>\n            </div>\n            <div className=\"card-footer\">\n              <button\n                type=\"button\"\n                className=\"btn text-capitalize buttonDetails\"\n                onClick={() => handleDetails(0, recipe_id)}\n              >\n                Details\n              </button>\n              <a\n                href={source_url}\n                className=\"btn mx-2 text-capitalize buttonURL\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Recipe URL\n              </a>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class RecipeSearch extends Component {\n  render() {\n    const { value, handleSubmit, handleChange } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\n              <h1 className=\"text-capitalize search\">Recipe Search</h1>\n\n              <form className=\"mt-4\" onSubmit={handleSubmit}>\n                <label htmlFor=\"search\" className=\"text-capitalize\">\n                  Search by <span className=\"gold\">ingredients</span> below\n                </label>\n                <div className=\"input-group\">\n                  <input\n                    type=\"text\"\n                    name=\"search\"\n                    placeholder=\"Type ingredients here...\"\n                    className=\"form-control\"\n                    value={value}\n                    onChange={handleChange}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      type=\"submit\"\n                      className=\"input-group-text bg-primary text-white\"\n                    >\n                      <i className=\"fas fa-search\" />\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\nimport RecipeSearch from \"./RecipeSearch\";\n\nexport default class RecipeList extends Component {\n  render() {\n    const {\n      recipes,\n      handleDetails,\n      value,\n      handleSubmit,\n      handleChange,\n      error\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <RecipeSearch\n          value={value}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n        <div className=\"container my-5\">\n          {/* title */}\n          <div className=\"row\">\n            <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\n              <h1 className=\"text\">Recipe List</h1>\n            </div>\n          </div>\n          {/* end of title */}\n          <div className=\"row\">\n            {error ? (\n              <h1 className=\"text-danger text-center\">{error}</h1>\n            ) : (\n              recipes.map(recipe => {\n                return (\n                  <Recipe\n                    key={recipe.recipe_id}\n                    recipe={recipe}\n                    handleDetails={handleDetails}\n                  />\n                );\n              })\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","export const recipe = {\n  f2f_url: \"http://food2fork.com/view/35382\",\n  image_url:\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n  ingredients: [\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n    \"2 slices sour dough bread\",\n    \"1 tablespoon butter, room temperature\",\n    \"2 tablespoons cream cheese, room temperature\",\n    \"1/2 cup jack and cheddar cheese, shredded\",\n    \"1 tablespoon tortilla chips, crumbled\"\n  ],\n  publisher: \"Closet Cooking\",\n  publisher_url: \"http://closetcooking.com\",\n  source_url:\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n};\n","import React, { Component } from \"react\";\nimport { recipe } from \"../tempDetails\";\nexport default class RecipeDetails extends Component {\n/*constructor(props) {\n  super(props);\n\n  this.state = {\n    recipe: recipe,\n    url: `https://www.food2fork.com/api/get?key=b6fb5d86fb9419eeec1129a9e77a1ada&rId=${\n      this.props.id\n    }`\n  };\n}\nasync componentDidMount() {\n  try {\n    const data = await fetch(this.state.url);\n    const jsonData = await data.json();\n    this.setState({\n      recipe: jsonData.recipe\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}*/\n  state = {\n    recipe: recipe\n  };\n  async componentDidMount() {\n    const id = this.props.id;\n    const url = `https://www.food2fork.com/api/get?\n    key=4751da772ff58e0e735a8ee946d5a15f&rId=${id}`;\n    try {\n      const data = await fetch(url, { mode: 'no-cors' });\n      const jsonData = await data.json();\n      this.setState(\n        (state, props) => {\n          return { recipe: jsonData.recipe };\n        },\n        () => {}\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      image_url,\n      publisher,\n      publisher_url,\n      source_url,\n      title,\n      ingredients\n    } = this.state.recipe;\n    const { handleIndex } = this.props;\n    if (!ingredients) {\n      return <h1>Loading...</h1>;\n    }\n    if (ingredients) {\n      return (\n        <React.Fragment>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-10 mx-auto col-md-6 my-3\">\n                <button\n                  type=\"button\"\n                  className=\"btn buttonSecondary mb-5 text-capitalize\"\n                  onClick={() => handleIndex(1)}\n                >\n                  Back to Recipe List\n                </button>\n                <img src={image_url} className=\"d-block w-100\" alt=\"recipe\" />\n              </div>\n              {/* details */}\n              <div className=\"col-10 mx-auto col-md-6 my-3\">\n                <h6 className=\"text-uppercase text\">{title}</h6>\n                <h6 className=\"text-warning text-capitalize text\">\n                  Provided by: <strong>{publisher}</strong>\n                </h6>\n                <a\n                  href={publisher_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn btn-primary mt-2 text-capitalize\"\n                >\n                  Publisher's Website\n                </a>\n                <a\n                  href={source_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn buttonSecondary mt-2 mx-3 text-capitalize\"\n                >\n                  Recipe URL\n                </a>\n                <ul className=\"list-group mt-4\">\n                  <h2 className=\"mt-3 mb-4 text\">Ingredients</h2>\n                  {ingredients.map((item, index) => {\n                    return (\n                      <li key={index} className=\"list-group-item red\">\n                        {item}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { recipes } from \"./tempList\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeDetails from \"./components/RecipeDetails\";\n\nclass App extends Component {\n  state = {\n    recipes: recipes,\n    url: `https://www.food2fork.com/api/search?key=4751da772ff58e0e735a8ee946d5a15f`,\n    base_url: `https://www.food2fork.com/api/search?key=4751da772ff58e0e735a8ee946d5a15f`,\n    details_id: 35389,\n    pageIndex: 1,\n    search: \"\",\n    query: \"&q=\",\n    error: \"\"\n  };\n\n  async getRecipes() {\n    try {\n      const data = await fetch(this.state.url);\n      const jsonData = await data.json();\n      console.log(jsonData);\n      if (jsonData.recipes.length === 0) {\n        this.setState(() => {\n          return { error: \"sorry, but your search did not return any results\" };\n        });\n      } else {\n        this.setState(() => {\n          return { recipes: jsonData.recipes, error: \"\" };\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount() {\n    this.getRecipes();\n  }\n\n  displayPage = index => {\n    switch (index) {\n      default:\n      case 1:\n        return (\n          <RecipeList\n            recipes={this.state.recipes}\n            handleDetails={this.handleDetails}\n            value={this.state.search}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            error={this.state.error}\n          />\n        );\n      case 0:\n        return (\n          <RecipeDetails\n            id={this.state.details_id}\n            handleIndex={this.handleIndex}\n          />\n        );\n    }\n  };\n\n  handleIndex = index => {\n    this.setState({\n      pageIndex: index\n    });\n  };\n  handleDetails = (index, id) => {\n    this.setState({\n      pageIndex: index,\n      details_id: id\n    });\n  };\n  handleChange = e => {\n    this.setState(\n      {\n        search: e.target.value\n      },\n      () => {\n        // console.log(this.state.search);\n      }\n    );\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { base_url, query, search } = this.state;\n    this.setState(\n      () => {\n        return { url: `${base_url}${query}${search}`, search: \"\" };\n      },\n      () => {\n        this.getRecipes();\n      }\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>{this.displayPage(this.state.pageIndex)}</React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}